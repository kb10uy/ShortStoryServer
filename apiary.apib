FORMAT: 1A
HOST: https://ss.kb10uy.org/api/

# ShortStoryServer API
ShortStoryServerはAPIを公開しています。
何に使えるかは知らないけど使ってみてね。

## Data Structures
### Timestamp
+ date (string) - ローカル日時
+ timezone_type (number) - 不明
+ timezone (string) - タイムゾーン

### PaginationLinks
+ first (string) - 最初のページのリンク
+ last (string) - 最後のページのリンク
+ prev (string) - 前のページのリンク(nullable)
+ next (string) - 次のページのリンク(nullable)

### PaginationMetaData
+ current_page (number) - 現在のページ番号
+ from (number) - 開始番号
+ last_page (number) - 最後のページ番号
+ path (string) - APIパス
+ per_page (number) - 1ページ辺りの件数
+ to (number) - 終了番号
+ total (number) - 総数

### User
+ id (number) - ユーザーID
+ name (string) - ログイン時に用いるユーザー名
+ display_name (string) - 表示される名前
+ created_at (Timestamp) - アカウント作成日時
+ description (string) - アカウントの自己紹介文
+ birthday (Timestamp) - 誕生日
+ url (string) - 任意で設定されたURL
+ twitter_name (string) - TwitterのSN
+ github_name (string) - GitHubのSN

### Post
+ id (number) - 投稿ID
+ title (string) - タイトル
+ text (string) - 処理されていない本文
+ view_count (number) - 閲覧数
+ nice_count (number) - いいね数
+ bad_count (number) - よくないね数
+ created_at (Timestamp) - 初版の作成日時
+ updated_at (Timestamp) - 最新の編集日時
+ user (User) - 投稿したユーザー
+ tags (array[Tag]) - 付けられているタグ

### Bookmark
+ id (number) - ブックマークID
+ name (string) - 名前
+ description (string) - ブックマークの説明
+ created_at (Timestamp) - ブックマークの作成日時
+ user (User) - このブックマークを作成したユーザー

### BookmarkEntry
+ id (number) - エントリID
+ order (number) - ブックマークの中での並び順
+ comment (number) - ブックマークのコメント
+ created_at (Timestamp) - 登録日時
+ updated_at (Timestamp) - ブックマーク情報の更新日時
+ post_id (number) - 紐付いている投稿のID
+ post (Post) - 投稿
    - オプション値によってはないです

### Tag
+ id (number) - タグの内部ID
+ name (string) - タグのテキスト

### SuccessResult
+ result (string) - メッセージ

### ErrorResult
+ error (string) - 早く放課後になれ

### PaginatedBookmarks
+ data (array[Bookmark]) - 実際のデータ
+ links (PaginationLinks) - リンク
+ meta (PaginationMetaData) - メタデータ

### PaginatedBookmarkEntries
+ data (array[BookmarkEntry]) - 実際のデータ
+ links (PaginationLinks) - リンク
+ meta (PaginationMetaData) - メタデータ

### PaginatedPosts
+ data (array[Post]) - 実際のデータ
+ links (PaginationLinks) - リンク
+ meta (PaginationMetaData) - メタデータ

## User API [/users]

### Show User [GET /users/show{?id}]
指定したidのユーザーの情報を取得します。
+ Parameters
    + id (number, required) - ユーザーのID

+ Response 200 (application/json)
    + Attributes (User)

+ Response 404 (application/json)
    + Attributes (ErrorResult)

### List User's Posts [GET /users/posts{?user_id,page,count}]
指定したidのユーザーが投稿したSSを取得します。
+ Parameters
    + user_id (number, required) - ユーザーのID
    + page (number, optional) - ページ番号
    + count (number, optional) - 1ページ辺りの件数
        - デフォルト: 20

+ Response 200 (application/json)
    + Attributes (PaginatedPosts)

+ Response 404 (application/json)
    + Attributes (ErrorResult)

### List User's Bookmarks [GET /users/bookmarks{?user_id,page,count}]
指定したidのユーザーが作成したブックマークを取得します。
+ Parameters
    + user_id (number, required) - ユーザーのID
    + page (number, optional) - ページ番号
    + count (number, optional) - 1ページ辺りの件数
        - デフォルト: 20

+ Response 200 (application/json)
    + Attributes (PaginatedBookmarks)

+ Response 404 (application/json)
    + Attributes (ErrorResult)


## Post API [/posts]

### Show Post [GET /posts/show{?id}]
指定したidの投稿の情報を取得します。
+ Parameters
    + id (number, required) - 投稿のID

+ Response 200 (application/json)
    + Attributes (Post)

+ Response 404 (application/json)
    + Attributes (ErrorResult)

### List Posts [GET /posts/list{?page,count}]
SSを全てから取得します。
+ Parameters
    + page (number, optional) - ページ番号
    + count (number, optional) - 1ページ辺りの件数
        - デフォルト: 20

+ Response 200 (application/json)
    + Attributes (PaginatedPosts)

### Nice Post [PATCH /posts/nice]
**認証が必要です。**
指定したIDの投稿にいいねします。

+ Request (application/json)
    + Attributes
        + id (number, required) - いいねする投稿のID
    + Headers

            Authentication: Bearer JWT

+ Response 200 (application/json)
    + Attributes (SuccessResult)
    + Attributes
        + nice_count (number) - 現在のいいね数

+ Response 404 (application/json)
    + Attributes (ErrorResult)

### Bad Post [PATCH /posts/bad]
**認証が必要です。**
指定したIDの投稿によくないねします。

+ Request (application/json)
    + Attributes
        + id (number, required) - よくないねする投稿のID
    + Headers

            Authentication: Bearer JWT

+ Response 200 (application/json)
    + Attributes (SuccessResult)
    + Attributes
        + bad_count (number) - 現在のよくないね数

+ Response 404 (application/json)
    + Attributes (ErrorResult)

### Dopyulicate Post [POST /posts/dopyulicate]
**認証が必要です。**
指定したIDの投稿にしこりメールを送ります。
+ Request (application/json)
    + Attributes
        + id (number, required) - しこりメールを贈りたい投稿のID
    + Headers

            Authentication: Bearer JWT

+ Response 200 (application/json)
    + Attributes (SuccessResult)

+ Response 404 (application/json)
    + Attributes (ErrorResult)


## Bookmark API [/bookmarks]

### Show Bookmark [GET /bookmarks/show{?id}]
指定したidのブックマークの情報を取得します。
+ Parameters
    + id (number, required) - ブックマークのID

+ Response 200 (application/json)
    + Attributes (Bookmark)

+ Response 400 (application/json)
    + Attributes (ErrorResult)

+ Response 404 (application/json)
    + Attributes (ErrorResult)

### List Bookmarks [GET /bookmarks/list]
SSをまぁ全部取得します。
これも重いのであんま呼ばないで…

+ Response 200 (application/json)
    + Attributes (array[Bookmark])

### Show Bookmark Entries [GET /bookmarks/entries{?id,count,page,include_posts}]
指定したidのブックマークに登録されている投稿のエントリを取得します。
+ Parameters
    + id (number, required) - ブックマークのID
    + page (number, optional) - ページ番号
    + count (number, optional) - 1ページ辺りの件数
        - デフォルト: 20
    + include_posts (boolean, optional) - trueとすると投稿の情報まで取得します

+ Response 200 (application/json)
    + Attributes (PaginatedBookmarkEntries)

+ Response 404 (application/json)
    + Attributes (ErrorResult)

### Add Post to Bookmark [PATCH /bookmarks/add]
**認証が必要です。**
指定したidのブックマークに指定したidのSSを登録します。
すでに登録してある場合409エラーが帰ってきます。

+ Request (application/json)
    + Attributes
        + post_id (number, required) - 登録したい投稿のID
        + bookmark_id (number, required) - 登録したいブックマークのID
    + Headers

            Authentication: Bearer JWT

+ Response 200 (application/json)
    + Attributes (SuccessResult)

+ Response 403 (application/json)
    + Attributes (ErrorResult)

+ Response 404 (application/json)
    + Attributes (ErrorResult)

+ Response 409 (application/json)
    + Attributes (ErrorResult)

### Pluck Post from Bookmark [PATCH /bookmarks/pluck]
**認証が必要です。**
指定したidのブックマークから指定したidのSSを解除します。
登録されていないidを指定しても200が帰ってきます。

+ Request (application/json)
    + Attributes
        + post_id (number, required) - 解除したい投稿のID
        + bookmark_id (number, required) - 解除したいブックマークのID
    + Headers

            Authentication: Bearer JWT

+ Response 200 (application/json)
    + Attributes (SuccessResult)

+ Response 403 (application/json)
    + Attributes (ErrorResult)

+ Response 404 (application/json)
    + Attributes (ErrorResult)

+ Response 409 (application/json)
    + Attributes (ErrorResult)
