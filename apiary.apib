FORMAT: 1A
HOST: https://ss.kb10uy.org/api/

# ShortStoryServer API
ShortStoryServerはAPIを公開しています。
何に使えるかは知らないけど使ってみてね。

## Data Structures
### User
+ id (number) - ユーザーID
+ name (string) - ログイン時に用いるユーザー名
+ display_name (string) - 表示される名前
+ email (string) - メールアドレス
+ created_at (string) - アカウント作成日時
+ updated_at (string) - アカウント更新日時
+ icon (string) - アイコンのパス。サブディレクトリ以下からです
+ description (string) - アカウントの自己紹介文
+ birthday (string) - 誕生日
+ url (string) - 任意で設定されたURL
+ twitter_name (string) - TwitterのSN
+ github_name (string) - GitHubのSN

### Post
+ id (number) - 投稿ID
+ title (string) - タイトル
+ text (string) - 処理されていない本文
+ view_count (number) - 閲覧数
+ nice_count (number) - いいね数
+ bad_count (number) - よくないね数
+ created_at (number) - 初版の作成日時
+ modified_at (number) - 最新の編集日時
+ user (User) - 投稿したユーザー
+ tags (array[Tag]) - 付けられているタグ

### Bookmark
+ id (number) - ブックマークID
+ name (string) - 名前
+ description (string) - ブックマークの説明
+ created_at (string) - ブックマークの作成日時
+ updated_at (string) - ブックマークの更新日時(追加削除は更新されません！)
+ user (User) - このブックマークを作成したユーザー

### Tag
+ id (number) - タグの内部ID
+ name (string) - タグのテキスト

### SuccessResult
+ result (string) - メッセージ

### ErrorResult
+ error (string) - 早く放課後になれ



## User API [/users]

### Show User [GET /users/show{?id}]
指定したidのユーザーの情報を取得します。
+ Parameters
    + id (number, required) - ユーザーのID

+ Response 200 (application/json)
    + Attributes (User)

+ Response 400 (application/json)
    + Attributes (ErrorResult)

+ Response 404 (application/json)
    + Attributes (ErrorResult)

### List User's Posts [GET /users/posts{?user_id}]
指定したidのユーザーが投稿したSSを取得します。
+ Parameters
    + user_id (number, required) - ユーザーのID

+ Response 200 (application/json)
    + Attributes (array[Post])

+ Response 400 (application/json)
    + Attributes (ErrorResult)

+ Response 404 (application/json)
    + Attributes (ErrorResult)

### List User's Bookmarks [GET /users/bookmarks{?user_id}]
指定したidのユーザーが作成したブックマークを取得します。
+ Parameters
    + user_id (number, required) - ユーザーのID

+ Response 200 (application/json)
    + Attributes (array[Bookmark])

+ Response 400 (application/json)
    + Attributes (ErrorResult)

+ Response 404 (application/json)
    + Attributes (ErrorResult)


## Post API [/posts]

### Show Post [GET /posts/show{?id}]
指定したidの投稿の情報を取得します。
+ Parameters
    + id (number, required) - 投稿のID

+ Response 200 (application/json)
    + Attributes (Post)

+ Response 400 (application/json)
    + Attributes (ErrorResult)

+ Response 404 (application/json)
    + Attributes (ErrorResult)

### List Posts [GET /posts/list]
SSをまぁ全部取得します。
重いのであんま呼ばないで…

+ Response 200 (application/json)
    + Attributes (array[Post])

### Nice Post [PATCH /posts/nice]
**認証が必要です。**
指定したIDの投稿にいいねします。

+ Request (application/json)
    + Attributes
        + id (number, required) - いいねする投稿のID
    + Headers
    
            Authentication: Bearer JWT
        
+ Response 200 (application/json)
    + Attributes (SuccessResult)
    + Attributes
        + nice_count (number) - 現在のいいね数

+ Response 400 (application/json)
    + Attributes (ErrorResult)

+ Response 404 (application/json)
    + Attributes (ErrorResult)

### Bad Post [PATCH /posts/bad]
**認証が必要です。**
指定したIDの投稿によくないねします。

+ Request (application/json)
    + Attributes
        + id (number, required) - よくないねする投稿のID
    + Headers
    
            Authentication: Bearer JWT
        
+ Response 200 (application/json)
    + Attributes (SuccessResult)
    + Attributes
        + bad_count (number) - 現在のよくないね数

+ Response 400 (application/json)
    + Attributes (ErrorResult)

+ Response 404 (application/json)
    + Attributes (ErrorResult)

### Dopyulicate Post [POST /posts/dopyulicate]
**認証が必要です。**
指定したIDの投稿にしこりメールを送ります。
+ Request (application/json)
    + Attributes
        + id (number, required) - しこりメールを贈りたい投稿のID
    + Headers
    
            Authentication: Bearer JWT
        
+ Response 200 (application/json)
    + Attributes (SuccessResult)

+ Response 400 (application/json)
    + Attributes (ErrorResult)

+ Response 404 (application/json)
    + Attributes (ErrorResult)


## Bookmark API [/bookmarks]

### Show Bookmark [GET /bookmarks/show{?id}]
指定したidのブックマークの情報を取得します。
+ Parameters
    + id (number, required) - ブックマークのID

+ Response 200 (application/json)
    + Attributes (Bookmark)

+ Response 400 (application/json)
    + Attributes (ErrorResult)

+ Response 404 (application/json)
    + Attributes (ErrorResult)

### List Bookmarks [GET /bookmarks/list]
SSをまぁ全部取得します。
これも重いのであんま呼ばないで…

+ Response 200 (application/json)
    + Attributes (array[Bookmark])

### Add Post to Bookmark [PATCH /bookmarks/add]
**認証が必要です。**
指定したidのブックマークに指定したidのSSを登録します。
すでに登録してある場合409エラーが帰ってきます。

+ Request (application/json)
    + Attributes
        + post_id (number, required) - 登録したい投稿のID
        + bookmark_id (number, required) - 登録したいブックマークのID
    + Headers
    
            Authentication: Bearer JWT

+ Response 200 (application/json)
    + Attributes (SuccessResult)

+ Response 400 (application/json)
    + Attributes (ErrorResult)

+ Response 403 (application/json)
    + Attributes (ErrorResult)

+ Response 404 (application/json)
    + Attributes (ErrorResult)

+ Response 409 (application/json)
    + Attributes (ErrorResult)

### Pluck Post from Bookmark [PATCH /bookmarks/pluck]
**認証が必要です。**
指定したidのブックマークから指定したidのSSを解除します。
登録されていないidを指定しても200が帰ってきます。

+ Request (application/json)
    + Attributes
        + post_id (number, required) - 解除したい投稿のID
        + bookmark_id (number, required) - 解除したいブックマークのID
    + Headers
    
            Authentication: Bearer JWT

+ Response 200 (application/json)
    + Attributes (SuccessResult)

+ Response 400 (application/json)
    + Attributes (ErrorResult)

+ Response 403 (application/json)
    + Attributes (ErrorResult)

+ Response 404 (application/json)
    + Attributes (ErrorResult)

+ Response 409 (application/json)
    + Attributes (ErrorResult)